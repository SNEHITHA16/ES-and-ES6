const scores = [
  {
    marks: 32,
    name: "Yvette Merritt"
  },
  {
    marks: 57,
    name: "Lillian Ellis"
  },
  {
    marks: 22,
    name: "Mccall Carter"
  },
  {
    marks: 21,
    name: "Pate Collier"
  },
  {
    marks: 91,
    name: "Debra Beard"
  },
  {
    marks: 75,
    name: "Nettie Hancock"
  },
  {
    marks: 20,
    name: "Hatfield Hodge"
  }
];
// [32, 57, 22]
// Task 1
// Print the name list - As an array
// Expected Output
// ["Yvette Merritt", "Lillian Ellis", "Mccall Carter", "Pate Collier" ,
//  "Debra Beard", "Nettie Hancock",  "Hatfield Hodge"]

// Task 2
// >=40 pass.. find those student that passed (Use array method)
// Expected Output
// [{
//     marks: 57,
//     name: "Lillian Ellis"
//   },
//     {
//     marks: 91,
//     name: "Debra Beard"
//   },
//   {
//     marks: 75,
//     name: "Nettie Hancock"
//   }]

// Task 3
//  Find all the names who failed the exams (Array methods)
// Expected Output
//   ["Yvette Merritt",
//   "Mccall Carter",
//   "Pate Collier",
//   "Hatfield Hodge"
// ];

// Task 4
// Find the Average marks

// Task 5
// Find the topper's name
// Expected Output
// "Debra Beard"

// Only use
// map, reduce, filter & destructuring

// Task 6 - use es6
// Build -  intersection, uniq, without, groupBy
// https://lodash.com/docs/4.17.15#groupBy

solution:

task-1:

console.log(
      scores.map((score)=> score.name));
      
task-2:

console.log(
  scores.filter((ele)=> ele.marks>=40));
  
task-3:

console.log(
  scores.filter((ele)=> ele.marks<=40).map((ele)=> ele.name)));
  
task-4:

const sum= scores.reduce((sum,{marks})=> sum+marks,0);
   console.log(sum/scores.length);     
  console.log((sum/scores.length).toFixed(2));
  
 task-5:
 
 console.log(
    scores.filter((ele)=>ele.marks>=90).map((ele)=> ele.name))
